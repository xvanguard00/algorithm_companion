// Generated by view binder compiler. Do not edit!
package com.example.licenta_al.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.licenta_al.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLearnBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button bubblesortButton;

  @NonNull
  public final Button insertionsortButton;

  @NonNull
  public final TextView learnWelcomeText;

  @NonNull
  public final Button quicksortButton;

  private ActivityLearnBinding(@NonNull ConstraintLayout rootView, @NonNull Button bubblesortButton,
      @NonNull Button insertionsortButton, @NonNull TextView learnWelcomeText,
      @NonNull Button quicksortButton) {
    this.rootView = rootView;
    this.bubblesortButton = bubblesortButton;
    this.insertionsortButton = insertionsortButton;
    this.learnWelcomeText = learnWelcomeText;
    this.quicksortButton = quicksortButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLearnBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLearnBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_learn, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLearnBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bubblesort_button;
      Button bubblesortButton = ViewBindings.findChildViewById(rootView, id);
      if (bubblesortButton == null) {
        break missingId;
      }

      id = R.id.insertionsort_button;
      Button insertionsortButton = ViewBindings.findChildViewById(rootView, id);
      if (insertionsortButton == null) {
        break missingId;
      }

      id = R.id.learn_welcome_text;
      TextView learnWelcomeText = ViewBindings.findChildViewById(rootView, id);
      if (learnWelcomeText == null) {
        break missingId;
      }

      id = R.id.quicksort_button;
      Button quicksortButton = ViewBindings.findChildViewById(rootView, id);
      if (quicksortButton == null) {
        break missingId;
      }

      return new ActivityLearnBinding((ConstraintLayout) rootView, bubblesortButton,
          insertionsortButton, learnWelcomeText, quicksortButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
